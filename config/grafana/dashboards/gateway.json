{
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "grafana",
            "uid": "-- Grafana --"
          },
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "type": "dashboard"
        }
      ]
    },
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": 5,
    "links": [
      {
        "asDropdown": false,
        "icon": "external link",
        "includeVars": false,
        "keepTime": false,
        "tags": [
          "austinmesh"
        ],
        "targetBlank": false,
        "title": "Other Dashboards",
        "tooltip": "",
        "type": "dashboards",
        "url": ""
      }
    ],
    "panels": [
      {
        "datasource": {
          "default": true,
          "type": "influxdb",
          "uid": "adpwvhf6t1wjkd"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "barWidthFactor": 0.6,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "smooth",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "displayName": "${__field.labels.id}",
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "dB"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 0
        },
        "id": 3,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "adpwvhf6t1wjkd"
            },
            "query": "from(bucket: \"meshtastic\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_field\"] == \"rx_snr\")\n  |> filter(fn: (r) => r[\"gateway_id\"] == \"${gateway}\")\n  |> filter(fn: (r) => if length(arr: ${nodes:json}) == 0 then true else contains(value: r._from, set: ${nodes:json}))\n  |> filter(fn: (r) => r[\"_value\"] != 0)\n  |> map(fn: (r) => ({r with id: r.gateway_id + \"_\" + r._from} ))\n  |> group(columns: [\"_field\", \"gateway_id\", \"_from\", \"id\"])\n  |> movingAverage(n: 5)\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> rename(columns: {_value: \"snr\"})",
            "refId": "A"
          }
        ],
        "title": "Node RX SNR",
        "type": "timeseries"
      },
      {
        "datasource": {
          "default": true,
          "type": "influxdb",
          "uid": "adpwvhf6t1wjkd"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "barWidthFactor": 0.6,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "smooth",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "displayName": "${__field.labels.id}",
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "dB"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 12,
          "y": 0
        },
        "id": 5,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "adpwvhf6t1wjkd"
            },
            "query": "from(bucket: \"meshtastic\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_field\"] == \"rx_rssi\")\n  |> filter(fn: (r) => r[\"gateway_id\"] == \"${gateway}\")\n  |> filter(fn: (r) => if length(arr: ${nodes:json}) == 0 then true else contains(value: r._from, set: ${nodes:json}))\n  |> filter(fn: (r) => r[\"_value\"] != 0)\n  |> map(fn: (r) => ({r with id: r.gateway_id + \"_\" + r._from} ))\n  |> group(columns: [\"_field\", \"gateway_id\", \"_from\", \"id\"])\n  |> movingAverage(n: 5)\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> rename(columns: {_value: \"snr\"})",
            "refId": "A"
          }
        ],
        "title": "Node RX RSSI",
        "type": "timeseries"
      },
      {
        "datasource": {
          "default": true,
          "type": "influxdb",
          "uid": "adpwvhf6t1wjkd"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "axisSoftMin": 0,
              "fillOpacity": 85,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineWidth": 0,
              "scaleDistribution": {
                "type": "linear"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "displayName": "${__field.labels._from}",
            "fieldMinMax": false,
            "mappings": [],
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 8
        },
        "id": 7,
        "maxDataPoints": 200,
        "options": {
          "barRadius": 0,
          "barWidth": 0.9,
          "fullHighlight": false,
          "groupWidth": 0.7,
          "legend": {
            "calcs": [
              "min",
              "max",
              "mean",
              "sum"
            ],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "orientation": "auto",
          "showValue": "always",
          "stacking": "normal",
          "tooltip": {
            "mode": "single",
            "sort": "none"
          },
          "xField": "_time",
          "xTickLabelRotation": 0,
          "xTickLabelSpacing": 100
        },
        "pluginVersion": "11.2.0-186788",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "adpwvhf6t1wjkd"
            },
            "query": "from(bucket: \"meshtastic\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] != \"modelinfo\")\n  |> filter(fn: (r) => if length(arr: ${nodes:json}) == 0 then true else contains(value: r._from, set: ${nodes:json}))\n  |> filter(fn: (r) => r[\"gateway_id\"] == \"${gateway}\")\n  |> drop(columns: [\"_value\"])\n  |> group(columns: [\"_from\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: count, createEmpty: false, column: \"_measurement\")",
            "refId": "A"
          }
        ],
        "title": "Packets",
        "type": "barchart"
      },
      {
        "datasource": {
          "default": true,
          "type": "influxdb",
          "uid": "adpwvhf6t1wjkd"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "green",
              "mode": "palette-classic-by-name"
            },
            "custom": {
              "align": "auto",
              "cellOptions": {
                "type": "color-text"
              },
              "filterable": false,
              "inspect": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Node ID"
              },
              "properties": [
                {
                  "id": "links",
                  "value": [
                    {
                      "title": "Node Dashboard",
                      "url": "https://graphs.austinmesh.org/d/bdu5zhxo2y1vkd/individual-node?orgId=1&var-gateway=All&var-node=${__data.fields[\"Node ID\"]}"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 12,
          "y": 8
        },
        "id": 8,
        "options": {
          "cellHeight": "sm",
          "footer": {
            "countRows": false,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true
        },
        "pluginVersion": "11.2.0",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "adpwvhf6t1wjkd"
            },
            "query": "from(bucket: \"meshtastic\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] != \"modelinfo\")\n  |> filter(fn: (r) => r[\"gateway_id\"] == \"${gateway}\")\n  |> keep(columns: [\"_time\", \"_measurement\", \"_from\"])\n  |> group(columns: [\"_measurement\", \"_from\", \"_time\"])\n  |> last(column: \"_from\")\n  |> group()\n  |> sort(columns: [\"_time\"], desc: true)\n  |> top(n: 6)\n  |> rename(columns: {_time: \"Time\", _from: \"Node ID\", _measurement: \"Packet Type\"})",
            "refId": "A"
          }
        ],
        "title": "Recent Packets",
        "type": "table"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 16
        },
        "id": 13,
        "panels": [],
        "title": "SNR",
        "type": "row"
      },
      {
        "datasource": {
          "default": true,
          "type": "influxdb",
          "uid": "adpwvhf6t1wjkd"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "continuous-RdYlGr"
            },
            "mappings": [],
            "max": 10,
            "min": -20,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "dB"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 4,
          "x": 0,
          "y": 17
        },
        "id": 9,
        "maxPerRow": 6,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "percentChangeColorMode": "standard",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "11.2.0",
        "repeat": "nodes",
        "repeatDirection": "h",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "adpwvhf6t1wjkd"
            },
            "query": "from(bucket: \"meshtastic\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_field\"] == \"rx_snr\")\n  |> filter(fn: (r) => r[\"gateway_id\"] == \"${gateway}\")\n  |> filter(fn: (r) => r[\"_from\"] == \"${nodes}\")\n  |> filter(fn: (r) => r[\"_value\"] != 0)\n  |> map(fn: (r) => ({r with id: r.gateway_id + \"_\" + r._from} ))\n  |> group(columns: [\"_field\", \"gateway_id\", \"_from\", \"id\"])\n  |> movingAverage(n: 5)\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> rename(columns: {_value: \"snr\"})",
            "refId": "A"
          }
        ],
        "title": "$nodes",
        "type": "stat"
      }
    ],
    "refresh": "",
    "schemaVersion": 39,
    "tags": [
      "austinmesh",
      "gateway"
    ],
    "templating": {
      "list": [
        {
          "current": {
            "selected": false,
            "text": "!0c18aaf4",
            "value": "!0c18aaf4"
          },
          "datasource": {
            "type": "influxdb",
            "uid": "adpwvhf6t1wjkd"
          },
          "definition": "from(bucket: \"meshtastic\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => (exists r[\"gateway_id\"]))\n  |> keep(columns: [\"gateway_id\"])\n  |> distinct(column: \"gateway_id\")\n  |> group()",
          "description": "Gateway to filter data for.",
          "hide": 0,
          "includeAll": false,
          "label": "Gateway",
          "multi": false,
          "name": "gateway",
          "options": [],
          "query": {
            "query": "from(bucket: \"meshtastic\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => (exists r[\"gateway_id\"]))\n  |> keep(columns: [\"gateway_id\"])\n  |> distinct(column: \"gateway_id\")\n  |> group()"
          },
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "allValue": "[]",
          "current": {
            "selected": true,
            "text": [
              "All"
            ],
            "value": [
              "$__all"
            ]
          },
          "datasource": {
            "type": "influxdb",
            "uid": "adpwvhf6t1wjkd"
          },
          "definition": "import \"contrib/bonitoo-io/hex\"\nimport \"strings\"\n\nfrom(bucket: \"meshtastic\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"node\")\n  |> filter(fn: (r) => r[\"gateway_id\"] == \"${gateway}\")\n  |> filter(fn: (r) => r[\"_from\"] != string(v: hex.int(v: strings.trimPrefix(v: \"${gateway}\", prefix: \"!\"))))\n  |> keep(columns: [\"_time\", \"_from\", \"long_name\", \"short_name\"])\n  |> map(fn: (r) => ({ r with __value: string(v: r._from) + \":\" + string(v: r.long_name) + \" (\" + string(v: r.short_name) + \" / \" + string(v: r._from) + \")\" }))\n  |> group(columns: [\"__value\"])\n  |> last(column: \"_time\")\n  |> group()",
          "hide": 0,
          "includeAll": true,
          "label": "Nodes",
          "multi": true,
          "name": "nodes",
          "options": [],
          "query": {
            "query": "import \"contrib/bonitoo-io/hex\"\nimport \"strings\"\n\nfrom(bucket: \"meshtastic\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"node\")\n  |> filter(fn: (r) => r[\"gateway_id\"] == \"${gateway}\")\n  |> filter(fn: (r) => r[\"_from\"] != string(v: hex.int(v: strings.trimPrefix(v: \"${gateway}\", prefix: \"!\"))))\n  |> keep(columns: [\"_time\", \"_from\", \"long_name\", \"short_name\"])\n  |> map(fn: (r) => ({ r with __value: string(v: r._from) + \":\" + string(v: r.long_name) + \" (\" + string(v: r.short_name) + \" / \" + string(v: r._from) + \")\" }))\n  |> group(columns: [\"__value\"])\n  |> last(column: \"_time\")\n  |> group()"
          },
          "refresh": 1,
          "regex": "/(?<value>[0-9]+)\\:(?<text>.*)/",
          "skipUrlSync": false,
          "sort": 7,
          "type": "query"
        }
      ]
    },
    "time": {
      "from": "now-7d",
      "to": "now"
    },
    "timepicker": {},
    "timezone": "browser",
    "title": "Gateway Data",
    "uid": "cds5zcikts740a",
    "version": 14,
    "weekStart": ""
  }
