name: build

on:
  push:
    tags:
      - '*.*.*'
    branches:
      - main
  pull_request:
    branches:
      - main


jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.7

      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run isort
        uses: isort/isort-action@v1.1.0
        id: isort
        with:
          configuration: --profile black --check-only --diff -l 125 --verbose

      - name: isort summary
        env:
          ISORT_SUMMARY: ${{ steps.isort.outputs.isort-result }}
        run: |
          echo "\`\`\`python" >> $GITHUB_STEP_SUMMARY
          echo "$ISORT_SUMMARY" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Run black
        uses: psf/black@24.4.2
        with:
          options: "-l 125 --check --diff --verbose"
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.7

      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Test with pytest
        run: pytest --cov bridge

  build:
    runs-on: self-hosted

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - uses: actions/checkout@v4.1.7

      - name: Extract branch name
        id: extract_branch
        run: |
          if [[ "${GITHUB_REF}" == refs/heads/* ]]; then
            BRANCH_NAME=${GITHUB_REF#refs/heads/}
          elif [[ "${GITHUB_REF}" == refs/pull/* ]]; then
            BRANCH_NAME=$(echo ${GITHUB_REF} | sed 's#refs/pull/##; s#/merge##')
          elif [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            BRANCH_NAME=${GITHUB_REF#refs/tags/}
          else
            BRANCH_NAME=${GITHUB_REF}
          fi
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV

      - name: Set image tags
        id: set_tags
        run: |
          echo "tags=ghcr.io/${{ github.repository }}:${{ github.sha }} ghcr.io/${{ github.repository }}:$BRANCH_NAME" >> $GITHUB_OUTPUT
          if [ "$BRANCH_NAME" == "main" ]; then
            echo "tags=ghcr.io/${{ github.repository }}:${{ github.sha }} ghcr.io/${{ github.repository }}:$BRANCH_NAME ghcr.io/${{ github.repository }}:latest" >> $GITHUB_OUTPUT
          fi

      - name: Build image
        id: build_image
        uses: redhat-actions/buildah-build@v2.13
        with:
          image: ghcr.io/${{ github.repository }}
          platforms: linux/amd64
          tags: ${{ steps.set_tags.outputs.tags }}
          containerfiles: ./Containerfile

      - name: Push image
        uses: redhat-actions/push-to-registry@v2
        with:
          tags: ${{ steps.build_image.outputs.tags }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: self-hosted
    needs:
      - build
      - test
      - linting
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4.1.7

      - name: Extract tag from ref
        id: extract_tag
        run: |
          TAG=$(echo ${{ github.ref }} | sed 's#refs/tags/##')
          echo "tag=${TAG}" >> $GITHUB_OUTPUT

      - name: Create Sentry release with shell
        run: |
          RELEASE="${SENTRY_PROJECT}@${{ steps.extract_tag.outputs.tag }}"

          sentry-cli releases new $RELEASE
          sentry-cli releases set-commits --auto --ignore-missing $RELEASE
          sentry-cli deploys new -e production -r $RELEASE
          sentry-cli releases finalize $RELEASE
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: shinncloud
          SENTRY_PROJECT: bridger

      - name: Deploy Quadlets
        run: config/deploy.sh
        env:
          IMAGE: ghcr.io/${{ github.repository }}:${{ steps.extract_tag.outputs.tag }}
